"use strict";

function _toConsumableArray(t) {
    if (Array.isArray(t)) {
        for (var n = 0, s = Array(t.length); n < t.length; n++) s[n] = t[n];
        return s
    }
    return Array.from(t)
}

function _classCallCheck(t, n) {
    if (!(t instanceof n)) throw new TypeError("Cannot call a class as a function")
}
var _createClass = function () {
    function t(t, n) {
        for (var s = 0; s < n.length; s++) {
            var e = n[s];
            e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), Object.defineProperty(t, e.key, e)
        }
    }
    return function (n, s, e) {
        return s && t(n.prototype, s), e && t(n, e), n
    }
}();
~ function anonymous(window) {
    var tabPlugin = function () {
        function tabPlugin(container) {
            var _this2 = this,
                options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (_classCallCheck(this, tabPlugin), void 0 === container || 1 !== container.nodeType) throw new SyntaxError("The first parameter is the item that must be passed, and it must be an element object type!");
            var _options$lastIndex = options.lastIndex,
                lastIndex = void 0 === _options$lastIndex ? 0 : _options$lastIndex,
                _options$eventType = options.eventType,
                eventType = void 0 === _options$eventType ? "mouseover" : _options$eventType,
                _options$customPageCl = options.customPageClass,
                customPageClass = void 0 === _options$customPageCl ? "option" : _options$customPageCl,
                _options$customConten = options.customContentClass,
                customContentClass = void 0 === _options$customConten ? "con" : _options$customConten,
                changeEnd = options.changeEnd;
            ["lastIndex", "eventType", "customPageClass", "customContentClass", "changeEnd"].forEach(function (item) {
                _this2[item] = eval(item)
            }), this.container = container;
            var child = [].concat(_toConsumableArray(container.children)),
                option = null;
            option = child.find(function (t) {
                return _this2.hasClass(t, _this2.customPageClass)
            }), this.optionList = options ? [].concat(_toConsumableArray(option.children)) : [], this.conList = child.filter(function (t) {
                return _this2.hasClass(t, _this2.customContentClass)
            }), this.optionList.forEach(function (t, n) {
                if (n === _this2.lastIndex) return _this2.addClass(_this2.optionList[n], "active"), void _this2.addClass(_this2.conList[n], "active");
                _this2.removeClass(_this2.optionList[n], "active"), _this2.removeClass(_this2.conList[n], "active")
            }), this.changeTab()
        }
        return _createClass(tabPlugin, [{
            key: "hasClass",
            value: function (t, n) {
                return t.className.trim().split(/ +/).indexOf(n) >= 0
            }
        }, {
            key: "addClass",
            value: function (t, n) {
                this.hasClass(t, n) || (t.className += " " + n)
            }
        }, {
            key: "removeClass",
            value: function (t, n) {
                this.hasClass(t, n) && (t.className = t.className.trim().split(/ +/).filter(function (t) {
                    return t !== n
                }).join(" "))
            }
        }, {
            key: "changeTab",
            value: function () {
                var t = this;
                this.optionList.forEach(function (n, s) {
                    var e = t;
                    n["on" + t.eventType] = function () {
                        e.lastIndex !== s && (e.addClass(this, "active"), e.removeClass(e.optionList[e.lastIndex], "active"), e.addClass(e.conList[s], "active"), e.removeClass(e.conList[e.lastIndex], "active"), e.lastIndex = s, e.changeEnd && e.changeEnd(this, e.conList[s], s, e.lastIndex))
                    }
                })
            }
        }]), tabPlugin
    }();
    window.tabPlugin = tabPlugin
}(window);